/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/main.ts
var main_exports = {};
__export(main_exports, {
  default: () => PunctuationReplacer
});
module.exports = __toCommonJS(main_exports);
var import_obsidian = require("obsidian");
var DEFAULT_SETTINGS = {
  autoReplace: true
};
var PunctuationReplacer = class extends import_obsidian.Plugin {
  async onload() {
    await this.loadSettings();
    this.addCommand({
      id: "replace-punctuation",
      name: "\u66FF\u6362\u6807\u70B9\u7B26\u53F7 (Replace Punctuation)",
      callback: () => {
        const view = this.app.workspace.getActiveViewOfType(import_obsidian.MarkdownView);
        if (view) {
          this.replacePunctuation(view.editor);
        }
      },
      hotkeys: [{ modifiers: ["Ctrl", "Shift"], key: "R" }]
    });
    this.registerEvent(
      this.app.workspace.on("editor-change", () => {
        if (this.settings.autoReplace) {
          const view = this.app.workspace.getActiveViewOfType(import_obsidian.MarkdownView);
          if (view) {
            this.replacePunctuation(view.editor);
          }
        }
      })
    );
    this.addSettingTab(new PunctuationReplacerSettingTab(this.app, this));
  }
  async loadSettings() {
    this.settings = Object.assign({}, DEFAULT_SETTINGS, await this.loadData());
  }
  async saveSettings() {
    await this.saveData(this.settings);
  }
  replacePunctuation(editor) {
    const cursor = editor.getCursor();
    const content = editor.getValue();
    const newContent = content.replace(/，/g, ", ").replace(/。/g, ". ").replace(/！/g, "! ").replace(/？/g, "? ").replace(/；/g, "; ").replace(/：/g, ": ").replace(/"/g, '"').replace(/"/g, '"').replace(/'/g, "'").replace(/'/g, "'");
    if (content !== newContent) {
      editor.setValue(newContent);
      editor.setCursor(cursor);
    }
  }
};
var PunctuationReplacerSettingTab = class extends import_obsidian.PluginSettingTab {
  constructor(app, plugin) {
    super(app, plugin);
    this.plugin = plugin;
  }
  display() {
    const { containerEl } = this;
    containerEl.empty();
    containerEl.createEl("h2", { text: "\u6807\u70B9\u7B26\u53F7\u66FF\u6362\u5668\u8BBE\u7F6E (Punctuation Replacer Settings)" });
    new import_obsidian.Setting(containerEl).setName("\u542F\u7528\u81EA\u52A8\u66FF\u6362 (Enable Auto Replace)").setDesc("\u81EA\u52A8\u5C06\u4E2D\u6587\u6807\u70B9\u7B26\u53F7\u66FF\u6362\u4E3A\u82F1\u6587\u6807\u70B9\u7B26\u53F7 (Automatically replace Chinese punctuation with English punctuation)").addToggle((toggle) => toggle.setValue(this.plugin.settings.autoReplace).onChange(async (value) => {
      this.plugin.settings.autoReplace = value;
      await this.plugin.saveSettings();
    }));
  }
};
